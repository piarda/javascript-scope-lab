{
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 12,
    "pending": 0,
    "failures": 1,
    "start": "2025-07-14T21:52:05.929Z",
    "end": "2025-07-14T21:52:06.213Z",
    "duration": 284
  },
  "tests": [
    {
      "title": "is declared using const",
      "fullTitle": "index.js burgers is declared using const",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is set to the value of an array that has the following 2 elements: 'Hamburger' and 'Cheeseburger'",
      "fullTitle": "index.js burgers is set to the value of an array that has the following 2 elements: 'Hamburger' and 'Cheeseburger'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared using let",
      "fullTitle": "index.js featuredDrink is declared using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a string",
      "fullTitle": "index.js featuredDrink is a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is set to the value 'Strawberry Milkshake'",
      "fullTitle": "index.js featuredDrink is set to the value 'Strawberry Milkshake'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js addBurger is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "when called, creates a function-scoped variable named newBurger using the const keyword and assigns it the value 'Flatburger'",
      "fullTitle": "index.js addBurger when called, creates a function-scoped variable named newBurger using the const keyword and assigns it the value 'Flatburger'",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "Expected newBurger to be declared using const and have the value 'Flatburger': expected '// Write your solution in this file!\\nconst burgers = [\\'Hamburger\\', \\'Cheeseburger\\'];\\nlet featuredDrink = \\'Strawberry Milkshake\\';\\n// both are globe scopes, outside of any function\\n\\nfunction addBurger() {\\n  var newBurger = \\'Flatburger\\';\\n  burgers.push(newBurger);\\n}\\n// var makes this a function-scope variable\\n\\nif(true) {\\n    const anotherNewBurger = \\'Maple Bacon Burger\\';\\n    burgers.push(anotherNewBurger);\\n\\n    function changeFeaturedDrink() {\\n        featuredDrink = \\'The JavaShake\\';\\n    }\\n}' to match /const[ \\n]+newBurger[ \\n]*=[ \\n]*['\"`]Flatburger['\"`]/",
        "showDiff": false,
        "actual": "// Write your solution in this file!\nconst burgers = ['Hamburger', 'Cheeseburger'];\nlet featuredDrink = 'Strawberry Milkshake';\n// both are globe scopes, outside of any function\n\nfunction addBurger() {\n  var newBurger = 'Flatburger';\n  burgers.push(newBurger);\n}\n// var makes this a function-scope variable\n\nif(true) {\n    const anotherNewBurger = 'Maple Bacon Burger';\n    burgers.push(anotherNewBurger);\n\n    function changeFeaturedDrink() {\n        featuredDrink = 'The JavaShake';\n    }\n}",
        "stack": "AssertionError: Expected newBurger to be declared using const and have the value 'Flatburger': expected '// Write your solution in this file!\\nconst burgers = [\\'Hamburger\\', \\'Cheeseburger\\'];\\nlet featuredDrink = \\'Strawberry Milkshake\\';\\n// both are globe scopes, outside of any function\\n\\nfunction addBurger() {\\n  var newBurger = \\'Flatburger\\';\\n  burgers.push(newBurger);\\n}\\n// var makes this a function-scope variable\\n\\nif(true) {\\n    const anotherNewBurger = \\'Maple Bacon Burger\\';\\n    burgers.push(anotherNewBurger);\\n\\n    function changeFeaturedDrink() {\\n        featuredDrink = \\'The JavaShake\\';\\n    }\\n}' to match /const[ \\n]+newBurger[ \\n]*=[ \\n]*['\"`]Flatburger['\"`]/\n    at Context.<anonymous> (test/indexTest.js:46:21)\n    at process.processImmediate (node:internal/timers:505:21)"
      }
    },
    {
      "title": "when called, uses the .push() array method to add newBurger, which has the value of 'Flatburger', to the burgers array",
      "fullTitle": "index.js addBurger when called, uses the .push() array method to add newBurger, which has the value of 'Flatburger', to the burgers array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a condition with the value of true",
      "fullTitle": "index.js if statement has a condition with the value of true",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "creates a block-scoped variable named anotherNewBurger using the const keyword and assigns it the value 'Maple Bacon Burger'",
      "fullTitle": "index.js if statement creates a block-scoped variable named anotherNewBurger using the const keyword and assigns it the value 'Maple Bacon Burger'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the .push() array method to add anotherNewBurger, which has the value of 'Maple Bacon Burger', to the burgers array",
      "fullTitle": "index.js if statement uses the .push() array method to add anotherNewBurger, which has the value of 'Maple Bacon Burger', to the burgers array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js changeFeaturedDrink is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "when called, changes the value of the featuredDrink variable to 'The JavaShake'",
      "fullTitle": "index.js changeFeaturedDrink when called, changes the value of the featuredDrink variable to 'The JavaShake'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "when called, creates a function-scoped variable named newBurger using the const keyword and assigns it the value 'Flatburger'",
      "fullTitle": "index.js addBurger when called, creates a function-scoped variable named newBurger using the const keyword and assigns it the value 'Flatburger'",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "Expected newBurger to be declared using const and have the value 'Flatburger': expected '// Write your solution in this file!\\nconst burgers = [\\'Hamburger\\', \\'Cheeseburger\\'];\\nlet featuredDrink = \\'Strawberry Milkshake\\';\\n// both are globe scopes, outside of any function\\n\\nfunction addBurger() {\\n  var newBurger = \\'Flatburger\\';\\n  burgers.push(newBurger);\\n}\\n// var makes this a function-scope variable\\n\\nif(true) {\\n    const anotherNewBurger = \\'Maple Bacon Burger\\';\\n    burgers.push(anotherNewBurger);\\n\\n    function changeFeaturedDrink() {\\n        featuredDrink = \\'The JavaShake\\';\\n    }\\n}' to match /const[ \\n]+newBurger[ \\n]*=[ \\n]*['\"`]Flatburger['\"`]/",
        "showDiff": false,
        "actual": "// Write your solution in this file!\nconst burgers = ['Hamburger', 'Cheeseburger'];\nlet featuredDrink = 'Strawberry Milkshake';\n// both are globe scopes, outside of any function\n\nfunction addBurger() {\n  var newBurger = 'Flatburger';\n  burgers.push(newBurger);\n}\n// var makes this a function-scope variable\n\nif(true) {\n    const anotherNewBurger = 'Maple Bacon Burger';\n    burgers.push(anotherNewBurger);\n\n    function changeFeaturedDrink() {\n        featuredDrink = 'The JavaShake';\n    }\n}",
        "stack": "AssertionError: Expected newBurger to be declared using const and have the value 'Flatburger': expected '// Write your solution in this file!\\nconst burgers = [\\'Hamburger\\', \\'Cheeseburger\\'];\\nlet featuredDrink = \\'Strawberry Milkshake\\';\\n// both are globe scopes, outside of any function\\n\\nfunction addBurger() {\\n  var newBurger = \\'Flatburger\\';\\n  burgers.push(newBurger);\\n}\\n// var makes this a function-scope variable\\n\\nif(true) {\\n    const anotherNewBurger = \\'Maple Bacon Burger\\';\\n    burgers.push(anotherNewBurger);\\n\\n    function changeFeaturedDrink() {\\n        featuredDrink = \\'The JavaShake\\';\\n    }\\n}' to match /const[ \\n]+newBurger[ \\n]*=[ \\n]*['\"`]Flatburger['\"`]/\n    at Context.<anonymous> (test/indexTest.js:46:21)\n    at process.processImmediate (node:internal/timers:505:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "is declared using const",
      "fullTitle": "index.js burgers is declared using const",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is set to the value of an array that has the following 2 elements: 'Hamburger' and 'Cheeseburger'",
      "fullTitle": "index.js burgers is set to the value of an array that has the following 2 elements: 'Hamburger' and 'Cheeseburger'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared using let",
      "fullTitle": "index.js featuredDrink is declared using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a string",
      "fullTitle": "index.js featuredDrink is a string",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is set to the value 'Strawberry Milkshake'",
      "fullTitle": "index.js featuredDrink is set to the value 'Strawberry Milkshake'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js addBurger is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "when called, uses the .push() array method to add newBurger, which has the value of 'Flatburger', to the burgers array",
      "fullTitle": "index.js addBurger when called, uses the .push() array method to add newBurger, which has the value of 'Flatburger', to the burgers array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a condition with the value of true",
      "fullTitle": "index.js if statement has a condition with the value of true",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "creates a block-scoped variable named anotherNewBurger using the const keyword and assigns it the value 'Maple Bacon Burger'",
      "fullTitle": "index.js if statement creates a block-scoped variable named anotherNewBurger using the const keyword and assigns it the value 'Maple Bacon Burger'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the .push() array method to add anotherNewBurger, which has the value of 'Maple Bacon Burger', to the burgers array",
      "fullTitle": "index.js if statement uses the .push() array method to add anotherNewBurger, which has the value of 'Maple Bacon Burger', to the burgers array",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a function",
      "fullTitle": "index.js changeFeaturedDrink is a function",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "when called, changes the value of the featuredDrink variable to 'The JavaShake'",
      "fullTitle": "index.js changeFeaturedDrink when called, changes the value of the featuredDrink variable to 'The JavaShake'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}